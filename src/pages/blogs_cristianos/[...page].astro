---
import type { GetStaticPaths, Page } from 'astro'
import type { CollectionEntry } from 'astro:content'

import { Paginator, PostPreview } from 'astro-pure/components/pages'
import { getBlogCollection, getUniqueTags, sortMDByDate } from 'astro-pure/server'
import { Button, Icon } from 'astro-pure/user'
import PageLayout from '@/layouts/BaseLayout.astro'
import config from '@/site-config'

export const prerender = true

export const getStaticPaths = (async ({ paginate }) => {
  const collections = sortMDByDate(await getBlogCollection('blogs_cristianos'))
  const uniqueTags = getUniqueTags(collections)
  const collectionsCount = collections.length
  return paginate(collections, {
    pageSize: config.content.blogPageSize,
    props: { uniqueTags, collectionsCount }
  })
}) satisfies GetStaticPaths

interface Props {
  page: Page<CollectionEntry<'blogs_cristianos'>>
  uniqueTags: string[]
  collectionsCount: number
}

const { page, uniqueTags, collectionsCount } = Astro.props

const meta = {
  description: 'Notas de las reuniones ICLP',
  title: 'Blogs Cristianos'
}
---

<PageLayout {meta}>
  <Button title="Volver" href="/" style="back" />
  <main class="mt-6 lg:mt-10">
    <h1 class="mb-6 mt-6 text-3xl font-medium sm:mt-10">Blogs Cristianos</h1>

    {
      page.data.length === 0 ? (
        <p>No posts yet.</p>
      ) : (
        <div class="grid gap-y-16 sm:grid-cols-[3fr_1fr] sm:gap-x-8">
          <section aria-label="Blog posts list">
            <div class="mb-3 flex flex-col justify-between text-sm sm:mb-5 sm:flex-row">
              <span class="text-muted-foreground">
                Página {page.currentPage} - Mostrando {page.data.length} de {collectionsCount} posts
              </span>
            </div>
            <Paginator {...{
              ...(page.url.prev && { prevUrl: { text: '← Página previa', url: page.url.prev } }),
              ...(page.url.next && { nextUrl: { text: 'Página siguiente →', url: page.url.next } })
            }} />
            <ul class="flex flex-col gap-y-4 text-start">
              {page.data.map((post) => <PostPreview {post} detailed />)}
            </ul>
          </section>

          {!!uniqueTags.length && (
            <aside>
              <h2 class="mb-4 flex items-center text-lg font-semibold">
                <Icon name="tag-2" class="me-2" />
                Tags
              </h2>
              <ul class="flex flex-wrap gap-2">
                {uniqueTags.map((tag) => (
                  <li><Button title={tag} href={`/tags/${tag}`} style="pill" /></li>
                ))}
              </ul>
            </aside>
          )}
        </div>
      )
    }
  </main>
</PageLayout>
